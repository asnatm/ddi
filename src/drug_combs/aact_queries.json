[
  {
    "name": "drugs combs, by arm and nct_id, with their conditions",
    "query": "SELECT relevant_studies.*,\n       c.id,\n       c.name,\n       c.downcase_name,\n       bc.id,\n       bc.mesh_term,\n       bc.downcase_mesh_term,\nFROM (SELECT studies.nct_id,\n             studies.start_date            study_start_date,\n             dg.id                         design_group_id,\n             json_agg(dgi.intervention_id) interventions_ids,\n             dg.group_type,\n             dg.title,\n             json_agg(i.name)              interventions_names,\n             json_agg(i.description)       interventions_descriptions\n      FROM studies\n               LEFT JOIN design_groups dg on studies.nct_id = dg.nct_id\n               LEFT JOIN design_group_interventions dgi on dg.id = dgi.design_group_id\n               LEFT JOIN interventions i on dgi.intervention_id = i.id\n      where intervention_type = 'Drug'\n        and i.name not LIKE '%Placebo%'\n        and i.name not LIKE '%placebo%'\n      GROUP BY studies.nct_id, studies.start_date, dg.id, dg.group_type, dg.title\n      having count(*) > 1) relevant_studies\n         LEFT OUTER JOIN browse_conditions bc on relevant_studies.nct_id = bc.nct_id\n         LEFT OUTER JOIN conditions c on relevant_studies.nct_id = c.nct_id"
  },
  {
    "name": "drugs combs, by arm and nct_id, with their conditions, and phase, and status",
    "query": "SELECT dg.*,\n       dgi.*,\n       i.*\n--        ion.name\nFROM studies\n         LEFT JOIN design_groups dg on studies.nct_id = dg.nct_id\n         LEFT JOIN design_group_interventions dgi on dg.id = dgi.design_group_id\n         LEFT JOIN interventions i on dgi.intervention_id = i.id\n         LEFT JOIN browse_conditions bc on studies.nct_id = bc.nct_id\n--          LEFT JOIN intervention_other_names ion on i.id = ion.intervention_id\n-- where studies.nct_id = 'NCT04250051'\nwhere studies.nct_id = 'NCT02264574';\n\n\nSELECT relevant_studies.*,\n       c.id,\n       c.name,\n       c.downcase_name,\n       bc.id,\n       bc.mesh_term,\n       bc.downcase_mesh_term\nFROM (SELECT studies.nct_id                nct_id,\n             studies.start_date            study_start_date,\n             studies.phase                 phase,\n             studies.overall_status        overall_status,\n             studies.last_known_status     last_known_status,\n             studies.is_fda_regulated_drug is_fda_regulated_drug,\n             dg.id                         design_group_id,\n             json_agg(dgi.intervention_id) interventions_ids,\n             dg.group_type,\n             dg.title,\n             json_agg(i.name)              interventions_names,\n             json_agg(i.description)       interventions_descriptions\n      FROM studies\n               LEFT JOIN design_groups dg on studies.nct_id = dg.nct_id\n               LEFT JOIN design_group_interventions dgi on dg.id = dgi.design_group_id\n               LEFT JOIN interventions i on dgi.intervention_id = i.id\n      where intervention_type = 'Drug'\n        and i.name not LIKE '%Placebo%'\n        and i.name not LIKE '%placebo%'\n        and studies.nct_id = 'NCT00408408'\n      GROUP BY studies.nct_id, studies.start_date, studies.phase, studies.overall_status,\n               studies.last_known_status, studies.is_fda_regulated_drug, dg.id,\n               dg.group_type, dg.title\n      having count(*) > 1) relevant_studies\n         LEFT OUTER JOIN browse_conditions bc on relevant_studies.nct_id = bc.nct_id\n         LEFT OUTER JOIN conditions c on relevant_studies.nct_id = c.nct_id\n"
  },
  {
    "name": "drugs combs, by arm and nct_id, with their conditions, and phase, and status, and other names for interventions",
    "query": "SELECT relevant_studies.*,\n       collected_conditions.mesh_terms,\n       collected_conditions.downcase_mesh_terms,\n       collected_conditions.condition_names,\n       collected_conditions.condition_downcase_names\nFROM (SELECT studies.nct_id                                                                 nct_id,\n             studies.start_date                                                             study_start_date,\n             studies.phase                                                                  phase,\n             studies.overall_status                                                         overall_status,\n             studies.last_known_status                                                      last_known_status,\n             studies.is_fda_regulated_drug                                                  is_fda_regulated_drug,\n             dg.id                                                                          design_group_id,\n             json_agg(dgi.intervention_id)                                                  interventions_ids,\n             dg.group_type,\n             dg.title,\n             json_agg(i.name)                                                               interventions_names,\n             json_agg(json_build_array(i.name, CASE\n                                                   WHEN ions.intervention_other_names is null THEN json_build_array()\n                                                   ELSE ions.intervention_other_names END)) interventions_with_other_names,\n             json_agg(i.description)                                                        interventions_descriptions\n      FROM studies\n               LEFT JOIN design_groups dg on studies.nct_id = dg.nct_id\n               LEFT JOIN design_group_interventions dgi on dg.id = dgi.design_group_id\n               LEFT JOIN interventions i on dgi.intervention_id = i.id\n               LEFT JOIN (SELECT json_agg(ion.name) intervention_other_names, intervention_id\n                          FROM intervention_other_names ion\n                          GROUP BY intervention_id) ions on i.id = ions.intervention_id\n      where intervention_type = 'Drug'\n        and i.name not LIKE '%Placebo%'\n        and i.name not LIKE '%placebo%'\n--         and studies.nct_id = 'NCT00408408'\n      GROUP BY studies.nct_id, studies.start_date, studies.phase, studies.overall_status,\n               studies.last_known_status, studies.is_fda_regulated_drug, dg.id,\n               dg.group_type, dg.title\n      having count(*) > 1) relevant_studies\n         LEFT OUTER JOIN (SELECT collected_conds.nct_id nct_id,\n                                 mesh_terms,\n                                 downcase_mesh_terms,\n                                 condition_names,\n                                 condition_downcase_names\n                          FROM (SELECT bc.nct_id                       nct_id,\n                                       json_agg(bc.mesh_term)          mesh_terms,\n                                       json_agg(bc.downcase_mesh_term) downcase_mesh_terms\n                                FROM browse_conditions bc\n                                GROUP BY bc.nct_id) bc_collected\n                                   LEFT JOIN (SELECT c.nct_id                  nct_id,\n                                                     json_agg(c.name)          condition_names,\n                                                     json_agg(c.downcase_name) condition_downcase_names\n                                              FROM conditions c\n                                              GROUP BY c.nct_id) collected_conds\n                                             ON collected_conds.nct_id = bc_collected.nct_id\n) collected_conditions ON relevant_studies.nct_id = collected_conditions.nct_id"
  },
  {
    "name": "unaggregated",
    "query": "SELECT relevant_studies.*,\n       collected_conditions.mesh_terms,\n       collected_conditions.downcase_mesh_terms,\n       collected_conditions.condition_names,\n       collected_conditions.condition_downcase_names\nFROM (SELECT studies.nct_id                             nct_id,\n             studies.start_date                         study_start_date,\n             studies.phase                              phase,\n             studies.overall_status                     overall_status,\n             studies.last_known_status                  last_known_status,\n             studies.is_fda_regulated_drug              is_fda_regulated_drug,\n             dg.id                                      design_group_id,\n             dgi.intervention_id                        interventions_id,\n             dg.group_type,\n             dg.title,\n             i.name                                     intervention_name,\n             CASE\n                 WHEN ions.intervention_other_names is null THEN json_build_array(i.name, json_build_array())\n                 ELSE json_build_array(i.name, ions.intervention_other_names) END interventions_with_other_names,\n             i.description                              intervention_description\n      FROM studies\n               LEFT JOIN design_groups dg\n                         on studies.nct_id = dg.nct_id\n               LEFT JOIN design_group_interventions dgi on dg.id = dgi.design_group_id\n               LEFT JOIN interventions i on dgi.intervention_id = i.id\n               LEFT JOIN (SELECT json_agg(ion.name) intervention_other_names, intervention_id\n                          FROM intervention_other_names ion\n                          GROUP BY intervention_id) ions on i.id = ions.intervention_id\n      where intervention_type = 'Drug'\n        and i.name not LIKE '%Placebo%'\n        and i.name not LIKE '%placebo%'\n        and dg.id in (SELECT dg.id\n                      FROM studies\n                               LEFT JOIN design_groups dg on studies.nct_id = dg.nct_id\n                               LEFT JOIN design_group_interventions dgi on dg.id = dgi.design_group_id\n                               LEFT JOIN interventions i on dgi.intervention_id = i.id\n                      where intervention_type = 'Drug'\n                        and i.name not LIKE '%Placebo%'\n                        and i.name not LIKE '%placebo%'\n                      GROUP BY studies.nct_id\n                             , dg.id\n                      HAVING COUNT(*)\n                                 > 1)\n     ) relevant_studies\n         LEFT OUTER JOIN (\n    SELECT collected_conds.nct_id nct_id,\n           mesh_terms,\n           downcase_mesh_terms,\n           condition_names,\n           condition_downcase_names\n    FROM (SELECT bc.nct_id                       nct_id,\n                 json_agg(bc.mesh_term)          mesh_terms,\n                 json_agg(bc.downcase_mesh_term) downcase_mesh_terms\n          FROM browse_conditions bc\n          GROUP BY bc.nct_id) bc_collected\n             LEFT JOIN (SELECT c.nct_id                  nct_id,\n                               json_agg(c.name)          condition_names,\n                               json_agg(c.downcase_name) condition_downcase_names\n                        FROM conditions c\n                        GROUP BY c.nct_id) collected_conds\n                       ON collected_conds.nct_id = bc_collected.nct_id\n) collected_conditions ON relevant_studies.nct_id = collected_conditions.nct_id;"
  }
]